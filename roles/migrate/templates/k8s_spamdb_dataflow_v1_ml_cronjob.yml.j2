apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ _metadata_name }}"
  namespace: "{{ k8s_spamdb_dataflow_v1_namespace }}"
  labels:
    name: lbl-{{ _metadata_name }}
spec:
  schedule: "{{ _cron_schedule }}"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        name: lbl-{{ _metadata_name }}
    spec:
      backoffLimit: 4
      activeDeadlineSeconds: 600
      template:
        metadata:
          labels:
            name: lbl-{{ _metadata_name }}
        spec:
          containers:
          - name: "{{ k8s_spamdb_dataflow_v1_container_name }}"
            image: "{{ k8s_spamdb_dataflow_v1_image_full_path }}"
            imagePullPolicy: IfNotPresent
            env:
              - name: CH_USER
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: ch_user
              - name: CH_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: ch_pass
              - name: PG_USER
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: pg_user
              - name: PG_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: pg_pass
              - name: S3_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: s3_access_key
              - name: S3_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: "{{ k8s_spamdb_dataflow_v1_secret_name }}"
                    key: s3_secret_key
            args:
              - python3
              - /{{ k8s_spamdb_dataflow_v1_mount_path }}/{{ _script_name }}.py
              - --ch_user=$(CH_USER)
              - --ch_pass=$(CH_PASSWORD)
              - --ch_host={{ k8s_spamdb_dataflow_v1_ch_host }}
              - --ch_port={{ k8s_spamdb_dataflow_v1_ch_port }}
              - --pg_user=$(PG_USER)
              - --pg_pass=$(PG_PASSWORD)
              - --pg_host={{ k8s_spamdb_dataflow_v1_pg_host }}
              - --pg_port={{ k8s_spamdb_dataflow_v1_pg_port }}
              - --pg_dbname={{ k8s_spamdb_dataflow_v1_pg_dbname }}
              - --s3_host={{ k8s_spamdb_dataflow_v1_s3_host }}
              - --s3_port={{ k8s_spamdb_dataflow_v1_s3_port }}
              - --s3_access_key=$(S3_ACCESS_KEY)
              - --s3_secret_key=$(S3_SECRET_KEY)
              - --s3_bucket={{ k8s_spamdb_dataflow_v1_s3_pickle_bucket }}
              - --config_yaml=/{{ k8s_spamdb_dataflow_v1_mount_path }}/{{ _config_yaml }}
              - --level_nospam={{ _level_nospam }}
              - --level_spam={{ _level_spam }}
              - --level_grey={{ _level_grey }}
              - --status={{ _status }}
              - --shift={{ _shift }}
              - --period={{ _period }}
              - --depth_days={{ _depth_days }}
              - --spam_score_calc={{ _spam_score_calc }}
              - --grey_score_calc={{ _grey_score_calc }}
            volumeMounts:
            - name: "{{ k8s_spamdb_dataflow_v1_store_mount }}"
              mountPath: /{{ k8s_spamdb_dataflow_v1_mount_path }}
          volumes:
          - name: "{{ k8s_spamdb_dataflow_v1_store_mount }}"
            configMap:
              name: "{{ k8s_spamdb_dataflow_v1_configmap_name }}"
          restartPolicy: Never

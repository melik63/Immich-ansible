---
- name: Установка k3s на Ubuntu + глобальный алиас 'k'
  hosts: k3s
  become: yes
  vars:
    k3s_version: v1.28.9+k3s1  # Опционально, укажите нужную версию

  tasks:
    - name: Обновить список пакетов
      apt:
        update_cache: yes

    - name: Установить необходимые зависимости
      apt:
        name:
          - curl
          - wget
          - gnupg
        state: present

    - name: Скачать и установить k3s
      shell: |
        curl -sfL https://get.k3s.io  | INSTALL_K3S_VERSION={{ k3s_version }} sh -
      args:
        executable: /bin/bash

    - name: Проверить статус службы k3s
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Создать .kube директорию для пользователя ubuntu
      file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Добавить kubeconfig для пользователя ubuntu
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/ubuntu/.kube/config
        owner: ubuntu
        group: ubuntu
        mode: '0644'
        remote_src: yes

    - name: Убедиться, что локальный хост разрешён в kubeconfig
      lineinfile:
        path: /home/ubuntu/.kube/config
        regexp: '^\s*server: http://127.0.0.1:6443'
        line: "    server: https://127.0.0.1:6443"
      notify: restart k3s

    - name: Установить алиас 'k' для 'kubectl' глобально для всех пользователей
      copy:
        content: |
          # Global alias for kubectl
          alias k='kubectl'
        dest: /etc/profile.d/kubectl_alias.sh
        mode: '0644'
        owner: root
        group: root

    - name: Сообщить о необходимости перезапустить shell или войти заново
      debug:
        msg: |
          Алиас 'k' установлен глобально.
          Чтобы он заработал, откройте новую сессию или выполните:
          exec bash -l

    - name: Установка и настройка MetalLB
      include_role:
        name: metallb
      vars:
        metallb_ip_range_start: 192.168.1.23
        metallb_ip_range_end: 192.168.1.23
      when: inventory_hostname == ansible_play_hosts_all[0]

    - name: Показать токен агента (node-token)
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token

    - name: Вывести информацию о токене
      debug:
        msg: "Node token: {{ node_token.content | b64decode }}"

  handlers:
    - name: restart k3s
      systemd:
        name: k3s
        state: restarted
